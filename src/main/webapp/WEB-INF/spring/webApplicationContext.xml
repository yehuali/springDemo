<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 简化Spring MVC相关配置 默认创建并注册一个默认的DefaultAnnotationHandlerMapping和一个RequestMappingHandlerAdapter实例
         JSR-349: hibernate-validator-5.x.x   validation-api-1.1.x
         JSR-303: hibernate-validator-4.x.x   validation-api-1.0.x.
         否则会报EL找不到错误
         默认装配一个数据校验LocalValidatorFactoryBean
    -->
    <mvc:annotation-driven conversion-service="conversionService"/>
    <!-- 数据转换
        <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
    <!-- 数据格式化 + 数据转换 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="org.spring.mvc.dataBind.StringToUserConverter"/>
            </list>
        </property>
    </bean>
    <context:component-scan base-package="org.spring.mvc.*"/>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            p:prefix="/WEB-INF/views/"
            p:suffix=".jsp"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          p:messageConverters-ref="messageConverters"/>
    <!--国际化资源 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
                            p:basename="i18n.message"/>

    <util:list id="messageConverters">
        <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
            p:marshaller-ref="xmlMarshaller"
            p:unmarshaller-ref="xmlMarshaller">
        </bean>
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    </util:list>
    <!-- 声明Marshaller，使用XStream技术 -->
    <bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="streamDriver">
            <!-- 使用STAX对XML消息进行处理，STAX占用内存少，响应速度也很快 -->
            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
        </property>
        <property name="annotatedClasses">
            <list>
                <!-- 使用XStream的注解定义XML转换规则，使用XStream注解的类在此声明-->
                <value>org.spring.mvc.entity.User</value>
            </list>
        </property>
    </bean>

</beans>